on:
  push:
    branches:
      - master
      - develop

env:
  SUBLIME_TEXT_VERSION: 4
  SUBLIME_TEXT_ARCH: x64

jobs:
  sublime-text:
    strategy:
      fail-fast: false
      matrix:
        st-version: [4]
        os: ["ubuntu-latest", "macOS-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - if: ${{ matrix.os == 'macOS-latest' }}
        run: brew unlink openssl
      - uses: SublimeText/UnitTesting/actions/setup@v1
        with:
          sublime-text-version: ${{ matrix.st-version }}
      - uses: SublimeText/UnitTesting/actions/run-tests@v1
        with:
          coverage: false
          codecov-upload: false

  clojure:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        clojure-version: ['1.10.0', '1.11.1', '1.12.0-alpha2']
        java-version: ['11', '17']
        java-distribution: ['temurin', 'zulu']

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.java-distribution }}
          java-version: ${{ matrix.java-version }}

      - uses: DeLaGuardo/setup-clojure@11.0
        with:
          cli: '1.10.3.1075'

      - uses: turtlequeue/setup-babashka@v1.5.0
        with:
          babashka-version: 1.1.171

      - uses: actions/setup-node@v3
        with:
          node-version: '17'
          cache: 'npm'
          cache-dependency-path: ./clojure/package-lock.json

      - run: npm install
        working-directory: ./clojure

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Cache Git dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gitlibs
          key: ${{ runner.os }}-gitlibs-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-gitlibs

      - name: Run Clojure tests
        if: ${{ matrix.os != 'windows-latest' }}
        run: clojure -J-Dclojure.main.report=stderr -Sdeps '{org.clojure/clojure {:mvn/version "${{ runner.clojure-version }}"}}' -X:dev:shadow-cljs user/-main
        shell: bash
        working-directory: ./clojure

      - name: Run Clojure tests
        if: ${{ matrix.os == 'windows-latest' }}
        run: clojure -J-Dclojure.main.report=stderr -Sdeps '{org.clojure/clojure {:mvn/version "${{ runner.clojure-version }}"}}' -X:dev:shadow-cljs user/-main
        shell: powershell
        working-directory: ./clojure

      - name: Run Babashka tests
        run: bb test_runner.bb
        working-directory: ./clojure
